Game.Shaders['terrain.fs'] = ["varying vec3 vColor;\r","varying vec4 vPosition;\r","uniform float gridLineThickness;\r","uniform float fogFar;\r","uniform float rgbShift;\r","float gridSize = 10.0;\r","\r","void main() {\r","    gl_FragColor = vec4(vColor, 1.0);\r","\r","    gl_FragColor = (mod(2.0+vPosition.y * gridSize, gridSize) < gridLineThickness || mod(2.0+vPosition.z * gridSize, gridSize) < gridLineThickness || mod(2.0+vPosition.x * gridSize, gridSize) < gridLineThickness) ?\r","        ((gl_FragColor.r < 0.1) && (gl_FragColor.g < 0.1) && (gl_FragColor.b < 0.1) ? gl_FragColor + 0.1 : gl_FragColor * 0.9)\r","        : gl_FragColor;\r","\r","    vec3 fogColor = vec3(0.01, 0.01, 0.01);\r","    float fogNear = 0.0;\r","\r","    float depth = gl_FragCoord.z / gl_FragCoord.w;\r","    float fogFactor = smoothstep(fogNear, fogFar, depth);\r","    if (fogFar > 0.0) {\r","      gl_FragColor = mix(gl_FragColor, vec4(fogColor, gl_FragColor.w), fogFactor);\r","    }\r","}"].join('\n');
Game.Shaders['terrain.vs'] = ["varying vec3 vColor;\r","varying vec4 vPosition;\r","\r","void main() {\r","    vColor = color;\r","    vec4 mvPosition;\r","    vPosition = vec4(position, 1.0);\r","    mvPosition = modelViewMatrix * vPosition;\r","    gl_Position = projectionMatrix * mvPosition;\r","}"].join('\n')